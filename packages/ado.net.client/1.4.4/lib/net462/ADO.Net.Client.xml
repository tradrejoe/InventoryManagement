<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ADO.Net.Client</name>
    </assembly>
    <members>
        <member name="T:ADO.Net.Client.DbClient">
            <summary>
            Represents the base class for all <see cref="T:ADO.Net.Client.DbClient"/> classes
            </summary>
            <seealso cref="T:ADO.Net.Client.Core.DbProvider"/>
            <remarks>
            DbClient is a utility class that encompasses both a <see cref="T:System.Data.Common.DbConnection"/> and a <see cref="T:System.Data.Common.DbCommand"/>
            to help query a database with minimal coding to focus on the users SQL
            </remarks>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetDataTableAsync(ADO.Net.Client.Core.ISqlQuery,System.Threading.CancellationToken)">
            <summary>
            Gets an instance of <see cref="T:System.Data.DataTable"/> asynchronously
            </summary>
            <exception cref="T:System.OperationCanceledException">Thrown in a thread upon cancellation of an operation that the thread was executing</exception>
            <param name="token">Structure that propagates a notification that an operation should be cancelled</param>
            <param name="query">SQL query to use to build a <see cref="T:System.Data.DataTable"/></param>
            <returns>Returns a <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:System.Data.DataTable"/></returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetDataObjectAsync``1(ADO.Net.Client.Core.ISqlQuery,System.Threading.CancellationToken)">
            <summary>
            Gets a single instance of <typeparamref name="T"/> based on the <paramref name="query"/> passed into the routine
            </summary>
            <exception cref="T:System.OperationCanceledException">Thrown in a thread upon cancellation of an operation that the thread was executing</exception>
            <typeparam name="T">An instance of the type caller wants create from query passed into procedure</typeparam>
            <param name="token">Structure that propagates a notification that an operation should be cancelled</param>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <returns>Gets an instance of <typeparamref name="T"/> based on the <paramref name="query"/> passed into the routine.
            Or the default value of <typeparamref name="T"/> if there are no search results
            </returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetDataObjectsAsync``1(ADO.Net.Client.Core.ISqlQuery,System.Threading.CancellationToken)">
            <summary>
            Gets an instance of <see cref="T:System.Collections.Generic.IEnumerable`1"/> of the type parameter object that creates an object based on the query passed into the routine
            </summary>
            <exception cref="T:System.OperationCanceledException">Thrown in a thread upon cancellation of an operation that the thread was executing</exception>
            <typeparam name="T">An instance of the type caller wants create from the query passed into procedure</typeparam>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <param name="token">Structure that propagates a notification that an operation should be cancelled</param>
            <returns>Returns an instance of <see cref="T:System.Collections.Generic.IEnumerable`1"/> based on the results of the passed in <paramref name="query"/></returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetDbDataReaderAsync(ADO.Net.Client.Core.ISqlQuery,System.Data.CommandBehavior,System.Threading.CancellationToken)">
            <summary>
            Utility method for returning a <see cref="T:System.Threading.Tasks.Task`1"/> object created from the passed in query
            </summary>
            <exception cref="T:System.OperationCanceledException">Thrown in a thread upon cancellation of an operation that the thread was executing</exception>
            <param name="behavior">Provides a description of the results of the query and its effect on the database.  Defaults to <see cref="F:System.Data.CommandBehavior.Default"/></param>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <param name="token">Structure that propagates a notification that an operation should be cancelled</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object, the caller is responsible for handling closing the <see cref="T:System.Data.Common.DbDataReader"/>.  Once the data reader is closed, the database connection will be closed as well</returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetScalarValueAsync``1(ADO.Net.Client.Core.ISqlQuery,System.Threading.CancellationToken)">
            <summary>
            Utility method for returning a <see cref="T:System.Threading.Tasks.Task`1"/> value from the database
            </summary>
            <exception cref="T:System.OperationCanceledException">Thrown in a thread upon cancellation of an operation that the thread was executing</exception>
            <typeparam name="T">An instance of the type caller wants create from the query passed into procedure</typeparam>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <param name="token">Structure that propagates a notification that an operation should be cancelled</param>
            <returns>Returns the value of the first column in the first row as <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetMultiResultReaderAsync(ADO.Net.Client.Core.ISqlQuery,System.Threading.CancellationToken)">
            <summary>
            Gets an instance of <see cref="T:ADO.Net.Client.Core.IMultiResultReader" />
            </summary>
            <exception cref="T:System.OperationCanceledException">Thrown in a thread upon cancellation of an operation that the thread was executing</exception>
            <param name="token">Structure that propagates a notification that an operation should be cancelled</param>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <returns>
            Returns an instance of <see cref="T:ADO.Net.Client.Core.IMultiResultReader" />
            </returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetScalarValuesAsync``1(ADO.Net.Client.Core.ISqlQuery,System.Threading.CancellationToken)">
            <summary>
            Gets an instance of <see cref="T:System.Collections.Generic.IEnumerable`1"/> of scalar values
            </summary>
            <exception cref="T:System.OperationCanceledException">Thrown in a thread upon cancellation of an operation that the thread was executing</exception>
            <param name="token">Structure that propagates a notification that an operation should be cancelled</param>
            <typeparam name="T">An instance of the type caller wants create from the query passed into procedure</typeparam>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <returns>Returns a <see cref="T:System.Collections.Generic.IEnumerable`1"/> based on the results of the passed in <paramref name="query"/></returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetDataObjectsStreamAsync``1(ADO.Net.Client.Core.ISqlQuery,System.Threading.CancellationToken)">
            <summary>
            Gets an instance of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of the type parameter object that creates an object based on the query passed into the routine streamed from the server
            </summary>
            <exception cref="T:System.OperationCanceledException">Thrown in a thread upon cancellation of an operation that the thread was executing</exception>
            <typeparam name="T">An instance of the type caller wants create from the query passed into procedure</typeparam>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <param name="token">Structure that propagates a notification that an operation should be cancelled</param>
            <returns>Returns a <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> based on the results of the passed in <paramref name="query"/></returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetScalarValuesStreamAsync``1(ADO.Net.Client.Core.ISqlQuery,System.Threading.CancellationToken)">
            <summary>
            Gets an instance of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of the type parameter object that creates an object based on the query passed into the routine streamed from the server
            </summary>
            <exception cref="T:System.OperationCanceledException">Thrown in a thread upon cancellation of an operation that the thread was executing</exception>
            <typeparam name="T">An instance of the type caller wants create from the query passed into procedure</typeparam>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <param name="token">Structure that propagates a notification that an operation should be cancelled</param>
            <returns>Returns a <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> based on the results of the passed in <paramref name="query"/></returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.ExecuteNonQueryAsync(ADO.Net.Client.Core.ISqlQuery,System.Threading.CancellationToken)">
            <summary>
            Utility method for executing an Ad-Hoc query or stored procedure
            </summary>
            <exception cref="T:System.OperationCanceledException">Thrown in a thread upon cancellation of an operation that the thread was executing</exception>
            <param name="token">Structure that propagates a notification that an operation should be cancelled</param>
            <param name="query">An instance of <see cref="T:ADO.Net.Client.Core.ISqlQuery"/> used to query a data store</param>
            <returns>Returns the number of rows affected by the passed in <paramref name="query"/></returns>
        </member>
        <member name="P:ADO.Net.Client.DbClient.ConnectionManager">
            <summary>
            An instance of <see cref="T:ADO.Net.Client.Core.IConnectionManager"/>
            </summary>
        </member>
        <member name="M:ADO.Net.Client.DbClient.#ctor(ADO.Net.Client.Core.ISqlExecutor)">
            <summary>
            Instantiates a new instance of <see cref="T:ADO.Net.Client.DbClient"/> with an instance of <see cref="T:ADO.Net.Client.Core.ISqlExecutor"/>
            </summary>
            <param name="executor">An instance of <see cref="T:ADO.Net.Client.Core.ISqlExecutor"/></param>
        </member>
        <member name="M:ADO.Net.Client.DbClient.#ctor(ADO.Net.Client.Core.IDbObjectFactory,ADO.Net.Client.Core.IConnectionManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ADO.Net.Client.DbClient"/> class.
            </summary>
            <param name="factory">An instance of <see cref="T:ADO.Net.Client.Core.IDbObjectFactory"/></param>
            <param name="manager">An instance of <see cref="T:ADO.Net.Client.Core.IConnectionManager"/></param>
        </member>
        <member name="M:ADO.Net.Client.DbClient.#ctor(ADO.Net.Client.Core.IDbObjectFactory,ADO.Net.Client.Core.IConnectionManager,ADO.Net.Client.Core.IDataMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:ADO.Net.Client.DbClient"/> class.
            </summary>
            <param name="factory">An instance of <see cref="T:ADO.Net.Client.Core.IDbObjectFactory"/></param>
            <param name="manager">An instance of <see cref="T:ADO.Net.Client.Core.IConnectionManager"/></param>
            <param name="mapper">An instance of <see cref="T:ADO.Net.Client.Core.IDataMapper"/></param>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetDataSet(ADO.Net.Client.Core.ISqlQuery)">
            <summary>
            Gets an instance of <see cref="T:System.Data.DataSet"/>
            </summary>
            <param name="query">SQL query to use to build a <see cref="T:System.Data.DataSet"/></param>
            <returns>Returns an instance of <see cref="T:System.Data.DataSet"/> based on the <paramref name="query"/> passed into the routine</returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetDataTable(ADO.Net.Client.Core.ISqlQuery)">
            <summary>
            Gets an instance of <see cref="T:System.Data.DataTable"/>
            </summary>
            <param name="query">SQL query to use to build a result set</param>
            <returns>Returns an instance of <see cref="T:System.Data.DataTable"/></returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetDbDataReader(ADO.Net.Client.Core.ISqlQuery,System.Data.CommandBehavior)">
            <summary>
            Utility method for returning a <see cref="T:System.Data.Common.DbDataReader"/> object created from the passed in query
            </summary>
            <param name="behavior">Provides a description of the results of the query and its effect on the database.  Defaults to <see cref="F:System.Data.CommandBehavior.Default"/></param>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <returns>An instance of <see cref="T:System.Data.Common.DbDataReader"/></returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetScalarValue``1(ADO.Net.Client.Core.ISqlQuery)">
            <summary>
            Utility method for returning a scalar value as an <see cref="T:System.Object"/> from the database
            </summary>
            <typeparam name="T">An instance of the type caller wants create from the query passed into procedure</typeparam>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <returns>Returns the value of the first column in the first row as an object</returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetDataObject``1(ADO.Net.Client.Core.ISqlQuery)">
            <summary>
            Gets a single instance of <typeparamref name="T"/> based on the <paramref name="query"/> passed into the routine
            </summary>
            <typeparam name="T">An instance of the type caller wants create from query passed into procedure</typeparam>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <returns>Gets an instance of <typeparamref name="T"/> based on the <paramref name="query"/> passed into the routine.
            Or the default value of <typeparamref name="T"/> if there are no search results
            </returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetDataObjects``1(ADO.Net.Client.Core.ISqlQuery)">
            <summary>
            Gets an instance of <see cref="T:System.Collections.Generic.IEnumerable`1"/> of the type parameter object that creates an object based on the query passed into the routine
            </summary>
            <typeparam name="T">An instance of the type caller wants create from the query passed into procedure</typeparam>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> based on the results of the passed in <paramref name="query"/></returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetDataObjectsStream``1(ADO.Net.Client.Core.ISqlQuery)">
            <summary>
            Gets an instance of <see cref="T:System.Collections.Generic.IEnumerable`1"/> of the type parameter object that creates an object based on the query passed into the routine streamed from the server
            </summary>
            <typeparam name="T">An instance of the type the caller wants create to from the query passed into procedure</typeparam>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <returns>Returns a <see cref="T:System.Collections.Generic.IEnumerable`1"/> based on the results of the passed in <paramref name="query"/></returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetMultiResultReader(ADO.Net.Client.Core.ISqlQuery)">
            <summary>
            Gets an instance of <see cref="T:ADO.Net.Client.Core.IMultiResultReader" />
            </summary>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <returns>
            Returns an instance of <see cref="T:ADO.Net.Client.Core.IMultiResultReader" />
            </returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetScalarValues``1(ADO.Net.Client.Core.ISqlQuery)">
            <summary>
            Gets an instance of <see cref="T:System.Collections.Generic.IEnumerable`1"/> of scalar values
            </summary>
            <typeparam name="T">An instance of the type caller wants create from the query passed into procedure</typeparam>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <returns>Returns a <see cref="T:System.Collections.Generic.IEnumerable`1"/> based on the results of the passed in <paramref name="query"/></returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.GetScalarValuesStream``1(ADO.Net.Client.Core.ISqlQuery)">
            <summary>
            Gets an instance of <see cref="T:System.Collections.Generic.IEnumerable`1"/> of the type parameter object that creates an object based on the query passed into the routine streamed from the server
            </summary>
            <typeparam name="T">An instance of the type caller wants create from the query passed into procedure</typeparam>
            <param name="query">The query command text or name of stored procedure to execute against the data store</param>
            <returns>Returns a <see cref="T:System.Collections.Generic.IEnumerable`1"/> based on the results of the passed in <paramref name="query"/></returns>
        </member>
        <member name="M:ADO.Net.Client.DbClient.ExecuteNonQuery(ADO.Net.Client.Core.ISqlQuery)">
            <summary>
            Utility method for executing an Ad-Hoc query or stored procedure
            </summary>
            <param name="query">An instance of <see cref="T:ADO.Net.Client.Core.ISqlQuery"/> used to query a data store</param>
            <returns>Returns the amount of records affected by the passed in <paramref name="query"/></returns>
        </member>
    </members>
</doc>
